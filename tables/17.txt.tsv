ID	Title	AuthorList	Description
[B+00]	Hoard: A Scalable Memory Allocator for Multithreaded Applications	Emery D. Berger, Kathryn S. McKinley, Robert D. Blumofe, Paul R. Wilson. ASPLOS-IX, November 2000. 	Berger and company’s excellent allocator for multiprocessor systems. Beyond just being a fun paper, also used in practice!
[B94]	The Slab Allocator: An Object-Caching Kernel Memory Allocator	Jeff Bonwick. USENIX ’94. 	A cool paper about how to build an allocator for an operating system kernel, and a great example of how to specialize for particular common object sizes.
[E06]	A Scalable Concurrent malloc(3) Implementation for FreeBSD	Jason Evans. April, 2006. http://people.freebsd.org/˜jasone/jemalloc/bsdcan2006/jemalloc.pdf. 	A detailed look at how to build a real modern allocator for use in multiprocessors. The "jemalloc" allocator is in widespread use today, within FreeBSD, NetBSD, Mozilla Firefox, and within Facebook.
[K65]	A Fast Storage Allocator	Kenneth C. Knowlton. Communications of the ACM, Volume 8:10, October 1965. 	The common reference for buddy allocation. Random strange fact: Knuth gives credit for the idea not to Knowlton but to Harry Markowitz, a Nobel-prize winning economist. Another strange fact: Knuth communicates all of his emails via a secretary; he doesn’t send email himself, rather he tells his secretary what email to send and then the secretary does the work of emailing. Last Knuth fact: he created TeX, the tool used to typeset this book. It is an amazing piece of software 4.
[S15]	Understanding glibc malloc	Sploitfun. February, 2015. sploitfun.wordpress.com/ 2015/02/10/understanding-glibc-malloc/. 	A deep dive into how glibc malloc works. Amazingly detailed and a very cool read.
[W+95]	Dynamic Storage Allocation: A Survey and Critical Review	Paul R. Wilson, Mark S. Johnstone, Michael Neely, David Boles. International Workshop on Memory Management, Scotland, UK, September 1995. 	An excellent and far-reaching survey of many facets of memory allocation. Far too much detail to go into in this tiny chapter!