ID	Title	AuthorList	Description
[B07]	ZFS: The Last Word in File Systems	Jeff Bonwick and Bill Moore. Available online: http://www.ostep.org/Citations/zfs_last.pdf. 	ZFS uses copy-on-write and journaling, actually, as in some cases, logging writes to disk will perform better.
[C+12]	Consistency Without Ordering	Vijay Chidambaram, Tushar Sharma, Andrea C. Arpaci-Dusseau, Remzi H. Arpaci-Dusseau. FAST ’12, San Jose, California. 	A recent paper of ours about a new form of crash consistency based on back pointers. Read it for the exciting details!
[C+13]	Optimistic Crash Consistency	Vijay Chidambaram, Thanu S. Pillai, Andrea C. Arpaci-Dusseau, Remzi H. Arpaci-Dusseau . SOSP ’13, Nemacolin Woodlands Resort, PA, November 2013. 	Our work on a more optimistic and higher performance journaling protocol. For workloads that call fsync() a lot, performance can be greatly improved.
[GP94]	Metadata Update Performance in File Systems	Gregory R. Ganger and Yale N. Patt. OSDI ’94. 	A clever paper about using careful ordering of writes as the main way to achieve consistency. Implemented later in BSD-based systems.
[G+08]	SQCK: A Declarative File System Checker	Haryadi S. Gunawi, Abhishek Rajimwale, Andrea C. Arpaci-Dusseau, Remzi H. Arpaci-Dusseau. OSDI ’08, San Diego, California. 	Our own paper on a new and better way to build a ﬁle system checker using SQL queries. We also show some problems with the existing checker, ﬁnding numerous bugs and odd behaviors, a direct result of the complexity of fsck.
[H87]	Reimplementing the Cedar File System Using Logging and Group Commit	Robert Hagmann. SOSP ’87, Austin, Texas, November 1987. 	The ﬁrst work (that we know of) that applied write-ahead logging (a.k.a. journaling) to a ﬁle system.
[M+13]	ffsck: The Fast File System Checker	Ao Ma, Chris Dragga, Andrea C. ArpaciDusseau, Remzi H. Arpaci-Dusseau. FAST ’13, San Jose, California, February 2013. 	A recent paper of ours detailing how to make fsck an order of magnitude faster. Some of the ideas have already been incorporated into the BSD ﬁle system checker [MK96] and are deployed today.
[MK96]	Fsck – The U NIX File System Check Program	Marshall Kirk McKusick and T. J. Kowalski. Revised in 1996. 	Describes the ﬁrst comprehensive ﬁle-system checking tool, the eponymous fsck. Written by some of the same people who brought you FFS.
[MJLF84]	A Fast File System for UNIX	Marshall K. McKusick, William N. Joy, Sam J. Lefﬂer, Robert S. Fabry. ACM Transactions on Computing Systems, Volume 2:3, August 1984. 	You already know enough about FFS, right? But come on, it is OK to re-reference important papers.
[P+14]	All File Systems Are Not Created Equal: On the Complexity of Crafting Crash-Consistent Applications	Thanumalayan Sankaranarayana Pillai, Vijay Chidambaram, Ramnatthan Alagappan, Samer Al-Kiswany, Andrea C. Arpaci-Dusseau, Remzi H. Arpaci-Dusseau. OSDI ’14, Broomﬁeld, Colorado, October 2014. 	A paper in which we study what ﬁle systems guarantee after crashes, and show that applications expect something different, leading to all sorts of interesting problems.
[P+05]	IRON File Systems	Vijayan Prabhakaran, Lakshmi N. Bairavasundaram, Nitin Agrawal, Haryadi S. Gunawi, Andrea C. Arpaci-Dusseau, Remzi H. Arpaci-Dusseau. SOSP ’05, Brighton, England, October 2005. 	A paper mostly focused on studying how ﬁle systems react to disk failures. Towards the end, we introduce a transaction checksum to speed up logging, which was eventually adopted into Linux ext4.
[PAA05]	Analysis and Evolution of Journaling File Systems	Vijayan Prabhakaran, Andrea C. Arpaci-Dusseau, Remzi H. Arpaci-Dusseau. USENIX ’05, Anaheim, California, April 2005. 	An early paper we wrote analyzing how journaling ﬁle systems work.
[R+11]	Coerced Cache Eviction and Discreet-Mode Journaling	Abhishek Rajimwale, Vijay Chidambaram, Deepak Ramamurthi, Andrea C. Arpaci-Dusseau, Remzi H. Arpaci-Dusseau. DSN ’11, Hong Kong, China, June 2011.	 Our own paper on the problem of disks that buffer writes in a memory cache instead of forcing them to disk, even when explicitly told not to do that! Our solution to overcome this problem: if you want A to be written to disk before B, ﬁrst write A, then send a lot of "dummy” writes to disk, hopefully causing A to be forced to disk to make room for them in the cache. A neat if impractical solution.
[T98]	Journaling the Linux ext2fs File System	Stephen C. Tweedie. The Fourth Annual Linux Expo, May 1998. 	Tweedie did much of the heavy lifting in adding journaling to the Linux ext2 ﬁle system; the result, not surprisingly, is called ext3. Some nice design decisions include the strong focus on backwards compatibility, e.g., you can just add a journaling ﬁle to an existing ext2 ﬁle system and then mount it as an ext3 ﬁle system.
[T00]	EXT3, Journaling Filesystem	Stephen Tweedie. 	Talk at the Ottawa Linux Symposium, July 2000. olstrans.sourceforge.net/release/OLS2000-ext3/OLS2000-ext3.html A transcript of a talk given by Tweedie on ext3.
[T01]	The Linux ext2 File System	Theodore Ts’o, June, 2001.. Available online here: http://e2fsprogs.sourceforge.net/ext2.html. 	A simple Linux ﬁle system based on the ideas found in FFS. For a while it was quite heavily used; now it is really just in the kernel as an example of a simple ﬁle system.